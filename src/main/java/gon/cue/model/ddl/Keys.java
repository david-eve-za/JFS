/*
 * This file is generated by jOOQ.
*/
package gon.cue.model.ddl;


import gon.cue.model.ddl.tables.Directory;
import gon.cue.model.ddl.tables.Drelation;
import gon.cue.model.ddl.tables.Files;
import gon.cue.model.ddl.tables.Frelation;
import gon.cue.model.ddl.tables.Permisions;
import gon.cue.model.ddl.tables.Users;
import gon.cue.model.ddl.tables.records.DirectoryRecord;
import gon.cue.model.ddl.tables.records.DrelationRecord;
import gon.cue.model.ddl.tables.records.FilesRecord;
import gon.cue.model.ddl.tables.records.FrelationRecord;
import gon.cue.model.ddl.tables.records.PermisionsRecord;
import gon.cue.model.ddl.tables.records.UsersRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>PUBLIC</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<DirectoryRecord, Long> IDENTITY_DIRECTORY = Identities0.IDENTITY_DIRECTORY;
    public static final Identity<FilesRecord, Long> IDENTITY_FILES = Identities0.IDENTITY_FILES;
    public static final Identity<PermisionsRecord, byte[]> IDENTITY_PERMISIONS = Identities0.IDENTITY_PERMISIONS;
    public static final Identity<UsersRecord, Integer> IDENTITY_USERS = Identities0.IDENTITY_USERS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DirectoryRecord> DIRECTORY_PK = UniqueKeys0.DIRECTORY_PK;
    public static final UniqueKey<FilesRecord> FILES_PK = UniqueKeys0.FILES_PK;
    public static final UniqueKey<PermisionsRecord> PERMISIONS_PK = UniqueKeys0.PERMISIONS_PK;
    public static final UniqueKey<UsersRecord> USERS_PK = UniqueKeys0.USERS_PK;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<DrelationRecord, UsersRecord> DRELATION_USERS_FK = ForeignKeys0.DRELATION_USERS_FK;
    public static final ForeignKey<DrelationRecord, DirectoryRecord> DRELATION_DIRECTORY_FK = ForeignKeys0.DRELATION_DIRECTORY_FK;
    public static final ForeignKey<DrelationRecord, PermisionsRecord> DRELATION_PERMISIONS_FK = ForeignKeys0.DRELATION_PERMISIONS_FK;
    public static final ForeignKey<FrelationRecord, UsersRecord> FRELATION_USERS_FK = ForeignKeys0.FRELATION_USERS_FK;
    public static final ForeignKey<FrelationRecord, FilesRecord> FRELATION_FILES_FK = ForeignKeys0.FRELATION_FILES_FK;
    public static final ForeignKey<FrelationRecord, PermisionsRecord> FRELATION_PERMISIONS_FK = ForeignKeys0.FRELATION_PERMISIONS_FK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<DirectoryRecord, Long> IDENTITY_DIRECTORY = createIdentity(Directory.DIRECTORY, Directory.DIRECTORY.ID);
        public static Identity<FilesRecord, Long> IDENTITY_FILES = createIdentity(Files.FILES, Files.FILES.ID);
        public static Identity<PermisionsRecord, byte[]> IDENTITY_PERMISIONS = createIdentity(Permisions.PERMISIONS, Permisions.PERMISIONS.ID);
        public static Identity<UsersRecord, Integer> IDENTITY_USERS = createIdentity(Users.USERS, Users.USERS.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<DirectoryRecord> DIRECTORY_PK = createUniqueKey(Directory.DIRECTORY, "DIRECTORY_PK", Directory.DIRECTORY.ID);
        public static final UniqueKey<FilesRecord> FILES_PK = createUniqueKey(Files.FILES, "FILES_PK", Files.FILES.ID);
        public static final UniqueKey<PermisionsRecord> PERMISIONS_PK = createUniqueKey(Permisions.PERMISIONS, "PERMISIONS_PK", Permisions.PERMISIONS.ID);
        public static final UniqueKey<UsersRecord> USERS_PK = createUniqueKey(Users.USERS, "USERS_PK", Users.USERS.ID);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<DrelationRecord, UsersRecord> DRELATION_USERS_FK = createForeignKey(Keys.USERS_PK, Drelation.DRELATION, "DRELATION_USERS_FK", Drelation.DRELATION.IDUSER);
        public static final ForeignKey<DrelationRecord, DirectoryRecord> DRELATION_DIRECTORY_FK = createForeignKey(Keys.DIRECTORY_PK, Drelation.DRELATION, "DRELATION_DIRECTORY_FK", Drelation.DRELATION.DID);
        public static final ForeignKey<DrelationRecord, PermisionsRecord> DRELATION_PERMISIONS_FK = createForeignKey(Keys.PERMISIONS_PK, Drelation.DRELATION, "DRELATION_PERMISIONS_FK", Drelation.DRELATION.PID);
        public static final ForeignKey<FrelationRecord, UsersRecord> FRELATION_USERS_FK = createForeignKey(Keys.USERS_PK, Frelation.FRELATION, "FRELATION_USERS_FK", Frelation.FRELATION.IDUSER);
        public static final ForeignKey<FrelationRecord, FilesRecord> FRELATION_FILES_FK = createForeignKey(Keys.FILES_PK, Frelation.FRELATION, "FRELATION_FILES_FK", Frelation.FRELATION.FID);
        public static final ForeignKey<FrelationRecord, PermisionsRecord> FRELATION_PERMISIONS_FK = createForeignKey(Keys.PERMISIONS_PK, Frelation.FRELATION, "FRELATION_PERMISIONS_FK", Frelation.FRELATION.PID);
    }
}
