/*
 * This file is generated by jOOQ.
*/
package gon.cue.model.ddl.tables.records;


import gon.cue.model.ddl.tables.Files;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FilesRecord extends UpdatableRecordImpl<FilesRecord> implements Record6<Long, String, String, Long, byte[], Integer> {

    private static final long serialVersionUID = 1431290697;

    /**
     * Setter for <code>PUBLIC.FILES.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.FILES.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.FILES.FNAME</code>.
     */
    public void setFname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.FILES.FNAME</code>.
     */
    public String getFname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.FILES.FEXT</code>.
     */
    public void setFext(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.FILES.FEXT</code>.
     */
    public String getFext() {
        return (String) get(2);
    }

    /**
     * Setter for <code>PUBLIC.FILES.FSIZE</code>.
     */
    public void setFsize(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.FILES.FSIZE</code>.
     */
    public Long getFsize() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>PUBLIC.FILES.FCONTENT</code>.
     */
    public void setFcontent(byte... value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.FILES.FCONTENT</code>.
     */
    public byte[] getFcontent() {
        return (byte[]) get(4);
    }

    /**
     * Setter for <code>PUBLIC.FILES.FOWNER</code>.
     */
    public void setFowner(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>PUBLIC.FILES.FOWNER</code>.
     */
    public Integer getFowner() {
        return (Integer) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, String, Long, byte[], Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, String, Long, byte[], Integer> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Files.FILES.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Files.FILES.FNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Files.FILES.FEXT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return Files.FILES.FSIZE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field5() {
        return Files.FILES.FCONTENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Files.FILES.FOWNER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getFname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getFext();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getFsize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component5() {
        return getFcontent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getFowner();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getFname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getFext();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getFsize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value5() {
        return getFcontent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getFowner();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FilesRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FilesRecord value2(String value) {
        setFname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FilesRecord value3(String value) {
        setFext(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FilesRecord value4(Long value) {
        setFsize(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FilesRecord value5(byte... value) {
        setFcontent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FilesRecord value6(Integer value) {
        setFowner(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FilesRecord values(Long value1, String value2, String value3, Long value4, byte[] value5, Integer value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FilesRecord
     */
    public FilesRecord() {
        super(Files.FILES);
    }

    /**
     * Create a detached, initialised FilesRecord
     */
    public FilesRecord(Long id, String fname, String fext, Long fsize, byte[] fcontent, Integer fowner) {
        super(Files.FILES);

        set(0, id);
        set(1, fname);
        set(2, fext);
        set(3, fsize);
        set(4, fcontent);
        set(5, fowner);
    }
}
